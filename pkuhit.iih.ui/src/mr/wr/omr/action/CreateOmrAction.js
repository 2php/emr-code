Ext.define('iih.mr.wr.omr.action.CreateOmrAction', {
	extend: 'Xap.ej.action.ServiceInvocation',
	doExecute: function(context) {
		this.superiorDoctorName=context.superiorDoctorName;
		this.timeAutoGenerated=context.timeAutoGenerated;
		this.higherLvlEmpId=context.higherLvlEmpId;
	   var tplTree = Ext.getCmp('omrTempSortTree');
       // 病历文书类型
	   var treeNode = tplTree.getSelectionModel().getSelection();
	   console.log(treeNode);
       var typeCode = treeNode[0].raw.data.templateTypeCode;
       // 就诊号
	   var encounterSn = IMER_GLOBAL.encounterSn;
	   var data = {'typeCode':typeCode,'encounterPk':encounterSn};
	   this.prepareOperations(context.operations,data);
	},
    prepareOperations: function(operations,data) {
        var url = 'canCreate';
        var METHODS = this.getInvocationMethods();
        var operation = {
            url: url,
            method: METHODS.METHOD_CREATE,
            data:data,
            condition: null,
            scope: this,
            success: this.onSuccess
        };
        operations.push(operation);
    },
    onSuccess: function(operation) {
       if(operation.result){
       	   var canCreate = operation.result.data.canCreate;
	       if(canCreate!=1){
	           Ext.Msg.alert('提示','病历已存在！');
	           return
	       }else{
	           var tplTree = Ext.getCmp('omrTempSortTree');
	           var treeNode = tplTree.getSelectionModel().getSelection();
	    	   console.log(treeNode);
	           var temp = treeNode[0].raw.data;
	           var typecode = temp.templateTypeCode;
	           	var superiorDoctorName='';
	           	var timeAutoGenerated=0;
	           	var name=temp.templateName;
	           	var higherLvlEmpId=null;
	           	if(this.timeAutoGenerated){
	           		timeAutoGenerated=this.timeAutoGenerated;
	           	}
	           	if(this.higherLvlEmpId){
	           		higherLvlEmpId=this.higherLvlEmpId;
	           		name=this.superiorDoctorName;
	           		superiorDoctorName=name.substring(0,name.indexOf(' '));
	           	}
	           	 var medicalRecord={
	                		filePk:temp.filePk,
	                		name:name,
	                		encounterPk:IMER_GLOBAL.encounterSn,
	    // bizTime:new Date().getTime(),
	                		typeCode:typecode,
	                		signLevelCode:temp.signLevelCode,
	                		superiorDoctorId:higherLvlEmpId,
	                		superiorDoctorName:superiorDoctorName,
	                		timeAutoGenerated:timeAutoGenerated,
	                		templeCode:temp.id
	                		};
	           	 		var	right= this.getOwner().getBlock('right');
	           	 		right.opType='new';
	           	 		right.medicalRecord=medicalRecord;
	    		        var initChain =  right.getActionChain('init');
	    		        initChain.execute();        
	           		}
       }   
      }    
});
